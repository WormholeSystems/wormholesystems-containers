services:
  application:
    image: application:latest
    build:
      context: .
      dockerfile: dockerfiles/php/php.dockerfile
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - php-logs:/var/log/php
      - laravel-logs:/var/www/html/storage/logs
  mysql:
    build:
      context: .
      dockerfile: dockerfiles/mysql/mysql.dockerfile
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-logs:/var/log/mysql
    env_file:
      - dockerfiles/mysql/.env
  redis:
    build:
      context: .
      dockerfile: dockerfiles/redis/redis.dockerfile
    volumes:
      - redis-logs:/var/log/redis
  composer:
    build:
      context: .
      dockerfile: dockerfiles/composer/composer.dockerfile
    volumes:
      - ./wormhole-systems:/var/www/html
      - laravel-logs:/var/www/html/storage/logs
    depends_on:
        - application
  npm:
    image: application:latest
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./wormhole-systems:/var/www/html
      - laravel-logs:/var/www/html/storage/logs
    depends_on:
      - application
  server:
    build:
      context: .
      dockerfile: dockerfiles/server/nginx.dockerfile
    volumes:
      - ./wormhole-systems:/var/www/html
      - ./dockerfiles/server/nginx.conf:/etc/nginx/conf.d/default.conf
      - nginx-logs:/var/log/nginx
    depends_on:
      - application
      - mysql
      - redis
    restart: ${RESTART_POLICY:-always}
    environment:
      - APP_DOMAIN=${APP_DOMAIN:-localhost}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.routers.app.tls.certresolver=letsencrypt"
      - "traefik.http.services.app.loadbalancer.server.port=80"
      - "traefik.http.middlewares.secure-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.secure-headers.headers.customrequestheaders.X-Forwarded-For="
      - "traefik.http.routers.app.middlewares=secure-headers"
  artisan:
    image: application:latest
    working_dir: /var/www/html
    entrypoint: ["php","-d", "memory_limit=-1", "artisan"]
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - laravel-logs:/var/www/html/storage/logs
    depends_on:
      - application
  queue:
    image: application:latest
    tty: true
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - laravel-logs:/var/www/html/storage/logs
    working_dir: /var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    restart: unless-stopped
    depends_on:
      - application
  scheduler:
    image: application:latest
    tty: true
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - laravel-logs:/var/www/html/storage/logs
    working_dir: /var/www/html
    command: php artisan schedule:work
    restart: unless-stopped
    depends_on:
      - application
  reverb:
    image: application:latest
    working_dir: /var/www/html
    tty: true
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - laravel-logs:/var/www/html/storage/logs
    depends_on:
      - mysql
      - redis
      - application
    command: php artisan reverb:start --host=${REVERB_HOST:-0.0.0.0} --port=${REVERB_PORT:-8080} --debug
    restart: ${RESTART_POLICY:-always}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverb.rule=Host(`${WS_DOMAIN}`)"
      - "traefik.http.routers.reverb.entrypoints=web,websecure"
      - "traefik.http.routers.reverb.tls=true"
      - "traefik.http.routers.reverb.tls.certresolver=letsencrypt"
      - "traefik.http.services.reverb.loadbalancer.server.port=${REVERB_PORT:-8080}"
      - "traefik.http.services.reverb.loadbalancer.server.scheme=http"
  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"
      - "--api.insecure=false"
      - "--serversTransport.insecureSkipVerify=false"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-acme:/etc/traefik/acme
      - traefik-logs:/var/log/traefik
    restart: unless-stopped
volumes:
  mysql-data:
  traefik-acme:
  # Log volumes for persistent storage
  nginx-logs:
  php-logs:
  mysql-logs:
  redis-logs:
  laravel-logs:
  traefik-logs:
