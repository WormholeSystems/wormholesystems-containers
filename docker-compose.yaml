services:
  application:
    image: application
    build:
      context: .
      dockerfile: dockerfiles/php/php.dockerfile
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
  mysql:
    build:
      context: .
      dockerfile: dockerfiles/mysql/mysql.dockerfile
    volumes:
      - mysql-data:/var/lib/mysql
    env_file:
      - dockerfiles/mysql/.env
  redis:
    build:
      context: .
      dockerfile: dockerfiles/redis/redis.dockerfile
  composer:
    build:
      context: .
      dockerfile: dockerfiles/composer/composer.dockerfile
    volumes:
      - ./wormhole-systems:/var/www/html
    depends_on:
        - application
  npm:
    image: application
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./wormhole-systems:/var/www/html
    depends_on:
      - application
  server:
    build:
      context: .
      dockerfile: dockerfiles/server/nginx.dockerfile
    volumes:
      - ./wormhole-systems:/var/www/html
      - ./dockerfiles/server/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - application
      - mysql
      - redis
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`localhost`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.services.app.loadbalancer.server.port=80"
      - "traefik.http.middlewares.secure-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.secure-headers.headers.customrequestheaders.X-Forwarded-For="
      - "traefik.http.routers.app.middlewares=secure-headers"
  artisan:
    image: application
    working_dir: /var/www/html
    entrypoint: ["php","-d", "memory_limit=-1", "artisan"]
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
    depends_on:
      - application
  queue:
    image: application
    tty: true
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
    working_dir: /var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    restart: always
    depends_on:
      - application
  scheduler:
    image: application
    tty: true
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
    working_dir: /var/www/html
    command: php artisan schedule:work
    restart: always
    depends_on:
      - application
  reverb:
    image: application
    working_dir: /var/www/html
    tty: true
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
    depends_on:
      - mysql
      - redis
      - application
    command: php artisan reverb:start --host=0.0.0.0 --port=8080 --debug
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverb.rule=Host(`ws.localhost`)"
      - "traefik.http.routers.reverb.entrypoints=web,websecure"
      - "traefik.http.routers.reverb.tls=true"
      - "traefik.http.services.reverb.loadbalancer.server.port=8080"
      - "traefik.http.services.reverb.loadbalancer.server.scheme=http"
  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"
      - "--api.insecure=true"
      - "--serversTransport.insecureSkipVerify=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/traefik/certs:ro
      - ./traefik:/etc/traefik/dynamic:ro
    restart: on-failure
volumes:
  mysql-data:
  letsencrypt:
